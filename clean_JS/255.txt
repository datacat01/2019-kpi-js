

    requirejs(['jquery'], function (jQuery) {
        (function ($) {

            (function (a, c, b, e) {
            a[b] = a[b] || {}; a[b].initial = { accountCode: "BAKER11118", host: "BAKER11118.pcapredict.com" };
            a[b].on = a[b].on || function () { (a[b].onq = a[b].onq || []).push(arguments) }; var d = c.createElement("script");
            d.async = !0; d.src = e; c = c.getElementsByTagName("script")[0]; c.parentNode.insertBefore(d, c)
            })(window, document, "pca", "/" + "/BAKER11118.pcapredict.com/js/sensor.js");

            pca.magento = pca.magento || {};
            pca.magento.currentUrl = window.location.href;
            pca.magento.checkout = false;

            pca.magento.isElementVisible = function( elem ) {
                return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
            };

            pca.magento.setupCheckout = function(){
                pca.magento.checkout = true;
                pca.magento.doLoad();
            };

            pca.on('data', function(source, key, address, variations) {
                
                switch (source) {
                    case "address":
                        if (pca.magento.checkout)
                        {
                            // Because magento is using form validation on each field we need to fire a change on the fields we populate.
                            var provinceField = null;
                            for(var c = 0; c< pca.capturePlus.controls.length; c++){
                                var cont = pca.capturePlus.controls[c];
                                if(cont.key == key){
                                   for(var f = 0; f < cont.fields.length; f++){
                                       var element = pca.getElement(cont.fields[f].element);
                                       if(cont.fields[f].field === '{ProvinceName}'){
                                           provinceField = element;
                                       }
                                        pca.fire(element, 'change');
                                   }
                                }
                            }
                            if(provinceField){
                                pca.setValue(provinceField, address.ProvinceName);
                                pca.fire(provinceField, 'change');
                            }
                        }
                        break;
                }
            });


            var loadHitCounter = 0;
            pca.on("load", function(type, key, control){
                if(type == "capture+"){
                    for(var f = 0; f < control.fields.length; f++){
                        if(control.fields[f].element.indexOf('wait_') == 0){
                            control.fields[f].element = control.fields[f].element.replace('wait_', '');
                        }
                        if(document.getElementById(control.fields[f].element)){
                            //ignore
                        }else{

                            var elementsMatchedByName = document.getElementsByName(control.fields[f].element);

                            if(elementsMatchedByName.length > loadHitCounter){
                                control.fields[f].element = elementsMatchedByName[loadHitCounter].id;
                            }else{
                                control.fields[f].element = "wait_" + control.fields[f].element;
                            }

                            
                        }
                    }
                    control.reload();
                    loadHitCounter++;
                }
            });

            pca.magento.reloadPCA = function() {
                if (console && console.log) console.log("Loading PCA");
                loadHitCounter = 0;
                pca.load();
            }

            pca.magento.loadPCA = function() {

                pca.magento.reloadPCA();
                
                // If you login while in the checkout and add a new address, it will show a popup view.
                var buttons = document.getElementsByTagName('button');
                for (var b = 0; b < buttons.length; b++) {
                    if (buttons[b].className.indexOf('action-show-popup') > -1) {
                        //onclick
                        $(buttons[b]).off('click.pca').on('click.pca', function(){
                            pca.magento.reloadPCA();
                        });
                    }
                }

                // Toggle button for adding billing fields on checkout single step.
                var els = document.getElementsByName('billing-address-same-as-shipping');
                if (els && els.length) {
                    for (var i=0; i < els.length; i++) {
                        //onclick
                        $(els[i]).off('click.pca').on('click.pca', function(){
                            if (this.checked === false) {
                                pca.magento.reloadPCA();
                            }
                        });
                    }                    
                }

                // Logged in user can select an address on billing screen or add a new one.
                var els = document.getElementsByName('billing_address_id');
                if (els && els.length) {
                    for (var i=0; i < els.length; i++) {
                        // onchange
                        $(els[i]).off('change.pca').on('change.pca', function(){
                            pca.magento.reloadPCA();
                        });
                    }                    
                }
                
                if (pca.magento.checkout) {
                    pca.magento.checkUrlChange();
                }
            };

            pca.magento.checkUrlChange = function() {
                if (window.location.href != pca.magento.currentUrl) {
                    pca.magento.currentUrl = window.location.href;
                    window.setTimeout(pca.magento.loadPCA, 500);
                }
                else {
                    window.setTimeout(pca.magento.checkUrlChange, 1000); 
                }
            };

            pca.magento.dynamicMagentoFieldsExist = function() {
                
                var isDynamicRegExp = new RegExp("^[A-Z0-9]{7}$");
                var col = document.getElementsByTagName("*");

                for (var i = 0; i < col.length; i++) {
                    if (isDynamicRegExp.test(col[i].id) && pca.magento.isElementVisible(col[i])) {
                        return true;
                    }
                }
            }

            pca.magento.doLoad = function() {
                // Load when ready.                  
                if (pca && 
                    pca.platform && 
                    typeof pca.platform.elementExists === 'function' &&
                    (pca.platform.getBindingsForService("PLATFORM_CAPTUREPLUS").length > 0 
                    || pca.platform.getBindingsForService("PLATFORM_MOBILEVALIDATION").length > 0
                    || pca.platform.getBindingsForService("PLATFORM_EMAILVALIDATION").length > 0)
                    && (!pca.magento.checkout || pca.magento.dynamicMagentoFieldsExist())) { 

                    window.setTimeout(pca.magento.loadPCA, 500);
                }
                else {
                    // re-set the timeout
                    window.setTimeout(pca.magento.doLoad, 500);
                }
            };

               
        })(jQuery);
    });
  


    require(['jquery'], function($) {
        $(function ($) {
            $('.block-search').on('click', function () {
                var searchContainer = $('.form-search');
                searchContainer.toggle();

                if (searchContainer.is(':visible')) {
                    searchContainer.find('input').focus();
                }
            });
        });

//disable search icon untill keypress
$(function ($) {
    $('.button.action.search').attr('disabled',true);
    
    $('#sli_search_1').keyup(function(){
        if($(this).val().length !=0){
            $('.button.action.search').attr('disabled', false);
        }
        else
        {
            $('.button.action.search').attr('disabled', true);        
        }
    });
});
//end

    });

  
function ajaxsearchsubmit(form) {  var search = encodeURIComponent(form.w.value);  document.activeElement.blur();  window.location="https://www.bakerross.co.uk/search/go?w=" +search;  return false;  }  

    (function () {
        var name = "nostojs";
        window[name] = window[name] || function (cb) {
                (window[name].q = window[name].q || []).push(cb);
            };
    })();



require(['jquery'], function($) {
jQuery(function() {
    try {
         /*  hotjar input whitelist */
         jQuery("input#sli_search_1").attr("data-hj-whitelist","true"); 
         jQuery("input#coupon_code").attr("data-hj-whitelist","true"); 
         jQuery("input.qty").attr("data-hj-whitelist","true"); 
    } catch (err) { }
});
});


    /**
     * Remove duplicate of current store view in switcher list.
     */
    require(["jquery"], function($){
        $(document).ready(function() {
            var currentStoreFlagClasses = $('.switcher-trigger > .flag').attr('class').split(' ');
            var storeOptionDuplicate = $('.switcher-dropdown ' + '.' + currentStoreFlagClasses[1]);

            if (storeOptionDuplicate.length) {
                storeOptionDuplicate.remove();
            }

            $('.switcher-options').on('mouseenter', function () {
                if (!$(this).find('#switcher-language-trigger').hasClass('active')) {
                    $(this).find('#switcher-language-trigger').click();
                }
            });

            $('.switcher-options').on('mouseleave', function () {
                if ($(this).find('#switcher-language-trigger').hasClass('active')) {
                    $(this).find('#switcher-language-trigger').click();
                }
            });
        });
    });


    require(['recobuy'], function (module) {
        window.Nosto = module;
    })

