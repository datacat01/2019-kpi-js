
(function (d, t) {
  var bh = d.createElement(t), s = d.getElementsByTagName(t)[0];
  bh.type = 'text/javascript';
  bh.src = 'https://www.bugherd.com/sidebarv2.js?apikey=14o1mcmtgsrrxp1oqvrpra';
  s.parentNode.insertBefore(bh, s);
  })(document, 'script');


//<![CDATA[

requirejs(['jquery', 'ultramegamenu'], function(jQuery, ultramegamenu) {

    var topMenuContainer = jQuery('#mainmenu');
    var topMenuSettings = {
        mobileMenuThreshold: 992        , isVerticalLayout: false        , vertnavTriggerSelector: '#vertnav-trigger'
        , mode: 0                , initVerticalMenuCollapsed: true        , outermostContainer: jQuery('.hp-blocks-holder')        , fullWidthDdContainer: jQuery('.hp-blocks-holder')    };
    var theTopMenu = topMenuContainer.ultramegamenu(topMenuSettings).data("infortis-ultramegamenu");
    theTopMenu.enableDropdowns();

        
        jQuery(window).on("load", function() {

            var menubar = topMenuContainer;
            var isTouchDevice = ('ontouchstart' in window) || (navigator.msMaxTouchPoints > 0);
            if (isTouchDevice)
            {
                menubar.on('click', 'a', function(e) {

                    //var link = jQuery(this);
                    link = jQuery(this);
                    if (!menubar.hasClass('nav-mobile') && link.parent().hasClass('nav-item--parent'))
                    {
                        if (!link.hasClass('ready'))
                        {
                            e.preventDefault();
                            menubar.find('.ready').removeClass('ready');
                            link.parents('li').children('a').addClass('ready');
                        }
                    }

                }); //end: on click
            } //end: if isTouchDevice

        }); //end: on load

    
}); //end: requirejs

//]]>


//<![CDATA[

requirejs(['jquery', 'smartheader', 'stickyheader'], function(jQuery, smartheader, stickyheader) {

    var theHeaderContainer = jQuery('#header-container');

        
        //alert('header tpl, before smartheader'); ///TODO

        theHeaderContainer.smartheader();

    
    jQuery(function($) {

        //console.log('header tpl, on(ready), ater smartheader'); ///
        //alert('header tpl, on(ready), ater smartheader'); ///TODO

        
            //Skip Links
            var skipContents = $('.skip-content');
            var skipLinks = $('.skip-link');
            skipLinks.on('click', function (e) {
                e.preventDefault();

                var self = $(this);
                var target = self.attr('href');

                //Get target element
                var elem = $(target);

                //Check if stub is open
                var isSkipContentOpen = elem.hasClass('skip-active') ? 1 : 0;

                //Hide all stubs
                skipLinks.removeClass('skip-active');
                skipContents.removeClass('skip-active');

                //Toggle stubs
                if (isSkipContentOpen) {
                    self.removeClass('skip-active');
                } else {
                    self.addClass('skip-active');
                    elem.addClass('skip-active');
                }
            });

        
        
            var stickyHeaderSettings = {
                stickyThreshold: 992            };
            theHeaderContainer.stickyheader(stickyHeaderSettings);

        
    }); //end: on document ready

}); //end: requirejs

//]]>


//<![CDATA[

    //Expose the header container if jQuery script (smartheader) failed

    // var jsHeaderContainerObject = document.getElementById("header-container");
    // if (jsHeaderContainerObject.style.display == 'none')
    // {
    //     jsHeaderContainerObject.style.display = "block";
    //     jsHeaderContainerObject.classList.add("js-shown"); ///
    // }

//]]>


    //<![CDATA[
        requirejs(['jquery','owlcarousel'], function(jQuery, owlcarousel){
            jQuery(function($) {
                var $ = jQuery;
                var owl = $('#slideshow-680737e4f67740b246d72657ca6cb93b');
                owl.owlCarousel({

                    singleItem: true,

                                    slideSpeed: 200,
                                     paginationSpeed: 500,
                                     autoPlay: 15000,
                                     stopOnHover: true,
                                     rewindNav: true,
                    rewindSpeed: 600,
                                      transitionStyle: 'fade',
                 navigation: true,
                    navigationText: false

                }); 

            });
        });
    //]]>
    

//<![CDATA[

    requirejs(['jquery','owlcarousel'], function(jQuery, owl)
    {
        jQuery(function($) {
            var owl = $('#itemslider-featured-65a967b3944021e7c289ae5618572652');
            owl.owlCarousel({

                                    lazyLoad: true,
                 
                                    itemsCustom: [ [0, 1], [320, 2], [480, 3], [768, 4], [992, 5], [1200, 6] ],
                    responsiveRefreshRate: 50,
                 
                                    slideSpeed: 200,
                 
                                    paginationSpeed: 500,
                 
                                    scrollPerPage: true,
                 
                 
                                    stopOnHover: true,
                 
                                    rewindNav: true,
                    rewindSpeed: 600,
                 
                                    pagination: false,
                                    navigation: true,
                    navigationText: false

            });
        });
    });

//]]>


//<![CDATA[

    requirejs(['jquery','owlcarousel'], function(jQuery, owl)
    {
        jQuery(function($) {
            var owl = $('#itemslider-featured-7039e2ac2d5e67e7de4620b91bfc6198');
            owl.owlCarousel({

                                    lazyLoad: true,
                 
                                    itemsCustom: [ [0, 1], [320, 2], [480, 3], [768, 4], [992, 5], [1200, 6] ],
                    responsiveRefreshRate: 50,
                 
                                    slideSpeed: 200,
                 
                                    paginationSpeed: 500,
                 
                                    scrollPerPage: true,
                 
                 
                                    stopOnHover: true,
                 
                                    rewindNav: true,
                    rewindSpeed: 600,
                 
                                    pagination: false,
                                    navigation: true,
                    navigationText: false

            });
        });
    });

//]]>


//<![CDATA[

requirejs(['jquery'], function(jQuery) {



        
        var gridItemsEqualHeightApplied = false;
        function setGridItemsEqualHeight()
        {
            var bottomMinSpace = 20; // Minimum space below the button at the bottom of the item
            var gridItemMaxHeight = 0;
            var gridItemMaxPaddingBottom = 0;

            var $listContainer = jQuery('.category-products-grid');
            var $listItems = $listContainer.children('ol').children();

            var centered = $listContainer.hasClass('centered');

            //TODO:
            var $row = jQuery();

            $listItems.each(function() {

                var $item = jQuery(this);
                var $actionsBlock = $item.find('.actions');

                // Check if first item in a row
                if ($item.css("clear") == "left")
                {
                    // If row not empty, apply the max values to all items in a row
                    if ($row.length)
                    {
                        $row.css({
                            "height": gridItemMaxHeight + "px", 
                            "padding-bottom": gridItemMaxPaddingBottom + "px"
                        });

                        // Reset the row collection and reset the max values
                        $row = jQuery();
                        gridItemMaxHeight = 0;
                        gridItemMaxPaddingBottom = 0;
                    }
                }
                $row = $row.add($item);

                $item.css("height", "auto");                 gridItemMaxHeight = Math.max(gridItemMaxHeight, $item.height());

                // Use constant bottomMinSpace as bottom offset for the actions container
                $actionsBlock.css("bottom", bottomMinSpace + "px");

                // Align button to the center
                if (centered)
                {
                    var objectWidth = $actionsBlock.width();
                    var availableWidth = $item.width();
                    var space = availableWidth - objectWidth;
                    var leftOffset = ~~(space / 2);
                    $actionsBlock.css("padding-left", leftOffset + "px");                 }

                // Set bottom padding wich equals to: actions container height + bottomMinSpace
                var currentPaddingBottom = bottomMinSpace + $actionsBlock.innerHeight();
                gridItemMaxPaddingBottom = Math.max(gridItemMaxPaddingBottom, currentPaddingBottom);

                $item.css("padding-bottom", currentPaddingBottom + "px"); // TODO: possibly redundant. Padding will be applied for the entire row.

            });

            // Apply the max values to all items in the last row
            if ($row.length)
            {
                $row.css({
                    "height": gridItemMaxHeight + "px", 
                    "padding-bottom": gridItemMaxPaddingBottom + "px"
                });
            }
            
            gridItemsEqualHeightApplied = true;

        }

    


    jQuery(function($) {

        setGridItemsEqualHeight();

                        
                        $('.category-products-grid').on('mouseenter', '.item', function() {
                $(this).find(".display-onhover").fadeIn(400, "easeOutCubic");
            }).on('mouseleave', '.item', function() {
                $(this).find(".display-onhover").stop(true).hide();
            });
        
        


                $('.products-grid, .products-list').on('mouseenter', '.product-item-img', function() {
            $(this).find(".alt-img").fadeIn(400, "easeOutCubic");
        }).on('mouseleave', '.product-item-img', function() {
            $(this).find(".alt-img").stop(true).fadeOut(400, "easeOutCubic");
        });



                $('.fade-on-hover').on('mouseenter', function() {
            $(this).animate({opacity: 0.75}, 300, 'easeInOutCubic');
        }).on('mouseleave', function() {
            $(this).stop(true).animate({opacity: 1}, 300, 'easeInOutCubic');
        });



                var ddBlockSelector = '.dropdown-block';
        var ddOpenTimeout;
        var dMenuPosTimeout;
        var DD_DELAY_IN = 200;
        var DD_DELAY_OUT = 0;
        var DD_ANIMATION_IN = 0;
        var DD_ANIMATION_OUT = 0;

        // $('.clickable-dropdown > .dropdown-heading').click(function() {
        //     $(this).parent().addClass('open');
        //     $(this).parent().trigger('mouseenter');
        // });

        //$('.dropdown-heading').on('click', function(e) {
        $(document).on('click', '.dropdown-heading', function(e) {
            e.preventDefault();
        });

        $(document).on('mouseenter', ddBlockSelector, function() {
            
            var ddToggle = $(this).children('.dropdown-heading');
            var ddMenu = $(this).children('.dropdown-content');
            var ddWrapper = ddMenu.parent();             
                        ddMenu.css("left", "");
            ddMenu.css("right", "");
            
                        if ($(this).hasClass('clickable-dropdown'))
            {
                                if ($(this).hasClass('open'))
                {
                    $(this).children('.dropdown-content').stop(true, true).delay(DD_DELAY_IN).fadeIn(DD_ANIMATION_IN, "easeOutCubic");
                }
            }
            else
            {
                                clearTimeout(ddOpenTimeout);
                ddOpenTimeout = setTimeout(function() {
                    
                    ddWrapper.addClass('open');
                    
                }, DD_DELAY_IN);
                
                //$(this).addClass('open');
                $(this).children('.dropdown-content').stop(true, true).delay(DD_DELAY_IN).fadeIn(DD_ANIMATION_IN, "easeOutCubic");
            }
            
                        clearTimeout(dMenuPosTimeout);
            dMenuPosTimeout = setTimeout(function() {

                if (ddMenu.offset().left < 0)
                {
                    var space = ddWrapper.offset().left;                     ddMenu.css("left", (-1)*space);
                    ddMenu.css("right", "auto");
                }
            
            }, DD_DELAY_IN);

        }).on('mouseleave', ddBlockSelector, function() {
            
            var ddMenu = $(this).children('.dropdown-content');
            clearTimeout(ddOpenTimeout);             ddMenu.stop(true, true).delay(DD_DELAY_OUT).fadeOut(DD_ANIMATION_OUT, "easeInCubic");
            if (ddMenu.is(":hidden"))
            {
                ddMenu.hide();
            }
            $(this).removeClass('open');
        });
        
        
        
                var windowScroll_t;
        $(window).scroll(function(){
            
            clearTimeout(windowScroll_t);
            windowScroll_t = setTimeout(function() {
                                        
                if ($(this).scrollTop() > 100)
                {
                    $('#scroll-to-top').fadeIn();
                }
                else
                {
                    $('#scroll-to-top').fadeOut();
                }
            
            }, 500);
            
        });
        
        $('#scroll-to-top').click(function(){
            $("html, body").animate({scrollTop: 0}, 600, "easeOutCubic");
            return false;
        });



                var dResize = {

            winWidth : 0
            , winHeight : 0
            , windowResizeTimeout : null

            , init : function()
            {
                dResize.winWidth = $(window).width();
                dResize.winHeight = $(window).height();
                dResize.windowResizeTimeout;

                $(window).on('resize', function(e) {
                    clearTimeout(dResize.windowResizeTimeout);
                    dResize.windowResizeTimeout = setTimeout(function() {
                        dResize.onEventResize(e);
                    }, 50);
                });
            }

            , onEventResize : function(e)
            {
                //Prevent from executing the code in IE when the window wasn't actually resized
                var winNewWidth = $(window).width();
                var winNewHeight = $(window).height();

                //Code in this condition will be executed only if window was actually resized
                if (dResize.winWidth != winNewWidth || dResize.winHeight != winNewHeight)
                {
                    //Trigger deferred resize event
                    $(window).trigger("themeResize", e);

                    //Additional code executed on deferred resize
                    dResize.onEventDeferredResize();
                }

                //Update window size variables
                dResize.winWidth = winNewWidth;
                dResize.winHeight = winNewHeight;
            }

            , onEventDeferredResize : function() //Additional code, execute after window was actually resized
            {

                //Products grid: equal height of items
                                    setGridItemsEqualHeight();
                
            }

        }; //end: dResize

        dResize.init();



    }); //end: on document ready
    
    


    jQuery(window).on('load',function() {

                            
            //TODO:
            setGridItemsEqualHeight();

        
    }); //end: on load



}); //end: requirejs

//]]>

