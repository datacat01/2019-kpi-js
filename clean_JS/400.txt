
function beacon_deferred(beacon_api) { beacon_api.set_cookie_domain(".fieldofflowers.com");beacon_api.pageview({"isNew":1,"initiator":{"id":"","session_id":"e3748d61d83d280fb2e528e28c1a5f55b8de707e","type":"ANONYMOUS","visit_id":"56f0b484-6350-45ad-a788-413c8c368eeb","visitor_id":"7b1f0613-c6c4-4825-8564-494830752e91"},"referer":{"url":""},"request":{"url":"https:\/\/www.fieldofflowers.com\/"}}, '', 1374493, "other", {"customer":{"id":"anonymous"}}, '56f0b484-6350-45ad-a788-413c8c368eeb', '7b1f0613-c6c4-4825-8564-494830752e91');}


(function(){var d=document,g=d.createElement('script'),s=d.getElementsByTagName('script')[0];g.type='text/javascript';g.defer=true;g.src='https://cdn11.bigcommerce.com/r-ebc93f1c7806a192a5c841de87111c96dd6471aa/javascript/jirafe/beacon_api.js';s.parentNode.insertBefore(g,s);})();


var BCData = {"csrf_token":"820a71e8d1d810da58e14033937d7d1a6172c8e372de61f7ea137bf646235667"};


    document.addEventListener("DOMContentLoaded", function(event) {



function classReg( className ) {
  return new RegExp("(^|\\s+)" + className + "(\\s+|$)");
}

// classList support for class management
// altho to be fair, the api sucks because it won't accept multiple classes at once
var hasClass, addClass, removeClass;

if ( 'classList' in document.documentElement ) {
  hasClass = function( elem, c ) {
    return elem.classList.contains( c );
  };
  addClass = function( elem, c ) {
    elem.classList.add( c );
  };
  removeClass = function( elem, c ) {
    elem.classList.remove( c );
  };
}
else {
  hasClass = function( elem, c ) {
    return classReg( c ).test( elem.className );
  };
  addClass = function( elem, c ) {
    if ( !hasClass( elem, c ) ) {
      elem.className = elem.className + ' ' + c;
    }
  };
  removeClass = function( elem, c ) {
    elem.className = elem.className.replace( classReg( c ), ' ' );
  };
}

function toggleClass( elem, c ) {
  var fn = hasClass( elem, c ) ? removeClass : addClass;
  fn( elem, c );
}

var classie = {
  // full names
  hasClass: hasClass,
  addClass: addClass,
  removeClass: removeClass,
  toggleClass: toggleClass,
  // short names
  has: hasClass,
  add: addClass,
  remove: removeClass,
  toggle: toggleClass
};

// transport
if ( typeof define === 'function' && define.amd ) {
  // AMD
  define( classie );
} else {
  // browser global
  window.classie = classie;
}

    var triggerBttn = document.getElementById( 'trigger-overlay' ),
        overlay = document.querySelector( 'div.elegant-overlay-shop' ),
        closeBttn = overlay.querySelector( 'button.overlay-close' );
        transEndEventNames = {
            'WebkitTransition': 'webkitTransitionEnd',
            'MozTransition': 'transitionend',
            'OTransition': 'oTransitionEnd',
            'msTransition': 'MSTransitionEnd',
            'transition': 'transitionend'
        },
        transEndEventName = transEndEventNames[ Modernizr.prefixed( 'transition' ) ],
        support = { transitions : Modernizr.csstransitions };
        s = Snap( overlay.querySelector( 'svg' ) ), 
        path = s.select( 'path' ),
        steps = overlay.getAttribute( 'data-steps' ).split(';'),
        stepsTotal = steps.length;

    function toggleOverlay() {
        if( classie.has( overlay, 'open' ) ) {
            var pos = stepsTotal-1;
            classie.remove( overlay, 'open' );
            classie.add( overlay, 'close' );
            
            var onEndTransitionFn = function( ev ) {
                    classie.remove( overlay, 'close' );
                },
                nextStep = function( pos ) {
                    pos--;
                    if( pos < 0 ) return;
                    path.animate( { 'path' : steps[pos] }, 60, mina.linear, function() { 
                        if( pos === 0 ) {
                            onEndTransitionFn();
                        }
                        nextStep(pos);
                    } );
                };

            nextStep(pos);
        }
        else if( !classie.has( overlay, 'close' ) ) {
            var pos = 0;
            classie.add( overlay, 'open' );
            
            var nextStep = function( pos ) {
                pos++;
                if( pos > stepsTotal - 1 ) return;
                path.animate( { 'path' : steps[pos] }, 60, mina.linear, function() { nextStep(pos); } );
            };

            nextStep(pos);
        }
    }

    triggerBttn.addEventListener( 'click', toggleOverlay );
    closeBttn.addEventListener( 'click', toggleOverlay );
});


function googleTranslateElementInit() {
  new google.translate.TranslateElement({pageLanguage: 'en', includedLanguages: 'ar,bn,es,fr,hi,ja,pa,pt,ru,zh-CN', layout: google.translate.TranslateElement.InlineLayout.SIMPLE}, 'google_translate_element');
}


                document.getElementById("copyright_year").innerHTML = new Date().getFullYear();
        
