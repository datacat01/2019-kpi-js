
    (function(document, location) {
        var matchResult;

        if (location.hostname === 'web') {
            document.domain = location.hostname;
            return;
        }

        matchResult = location.hostname.match(/([^.]+)\.\w{2,3}(?:\.\w{2})?$/);
        document.domain = matchResult !== null ? matchResult[0] : null;
    })(document, location)


    if (typeof op === 'undefined') {
        var op = {};
    }
    if (typeof op.config === 'undefined') {
        op.config = {};
    }

    op.config = {
        customerPersistenceTTL: 600,
        secure_protocol: "https",
        videoDomain: 'op%d.0ps.us/',
        feedbackDomain: 'feedback.opticsplanet.com/',
        feedbackScheme: 'https',
        feedbackUrl: 'https://www.opticsplanet.com/contact-us/',
        secureLayoutDomain: 'www.opticsplanet.com/l/',
        storeUrl: 'opticsplanet.com',
        storeUrlRegex: 'opticsplanet.com',
        storeName: 'OpticsPlanet',
        'opcart.store_name': 'OpticsPlanet',
        contactsWorkTime1: '9AM-7PM CST Mon-Fri',
        contactsWorkTime2: '',
        contactsWorkTime3: '',
        contactsWorkTimeRetail: '',
        contactsAddress1: 'OpticsPlanet, Inc.',
        contactsAddress2: '3150 Commercial Avenue',
        contactsAddress3: 'Northbrook, Illinois 60062',
        workTime: {
            weekdayFrom: 9,
            weekdayTo: 19,
            weekendSatFrom: 0,
            weekendSatTo: 0,
            weekendSunFrom: 0,
            weekendSunTo: 0,
        },
        contactsPhone1: '+1-800-504-5897',
        contactsPhone2: '+1-847-513-6201',
        contactsFax: '+1-847-919-3003',
        contactsEmail: 'sales@opticsplanet.com',
        feedbackRfqFaxNumber: '+1-847-919-9409',
        feedbackRfqPhoneNumber: '+1-847-513-6194',
        feedbackPriceMatchPhoneNumber: '+1-888-263-0356',
        facebookAppId: '169881939742690',
        contactGvsNumber: '+1-888-504-7871',
        gaUniversalAccount: 'UA-138028-1',
        isCartPage : false,
        isCheckout : false,
        isConfirmation: false,
        isMobileTheme: false,
        hasMyAccount: true,
        reactProductPageEnabled: true,
        buttonPlaceBackOrder: false,
        cartIdleSeconds : 600,
        environment: 'prod',
        amazonSellerId: 'A2DLL0XP02JRLP',
        loadTemplatesFromCache: false,
        howtoPagePrefix: 'howto',
        freeShippingThreshold: 49,
        jsVendorUrls: {
            'pinterestInit': '//assets.pinterest.com/js/pinit.js',
            'youtubeApi': 'https://www.youtube.com/iframe_api'
        },
        minGridSize: '20',
        defaultGridSize: '60',
        useUpdatedMediaGalleryFeature: true,
        useOpCartFeedbackEndpoint: true,
        googleAnalytics: {
            abTestingConfig: {"completed":[],"cookie_name":"_abtesting","cookie_lifetime":2419200},
            searchQuery: "",
            searchCategory: "",
            isSearchResult: false,
            isNotFound: false,
            hasManualDescription: null,
            isHomepage: true,
            pageType: null,
        },
        variantAvailabilityDelay: 2000,
        hiddenOptions: [],
        searchPath: 'search/',         currentTime: 1555251968,         isAuthorized: false,
        paypalIncontextDisabledBrowsers: ["edge","ie"],
        liveChatGroupId: 4642,
        opcartDomain: 'opticsplanet.com',
        totals: {"subtotal":"Subtotal","coupon":"Coupon","promotion_credits":"Promotion Credits","tax":"Est. Tax","shipping":"Shipping","credits":"Gift Certificate","store_credits":"Store Credits","grandtotal":"Grand Total"},
        isCartItemsPopupBanner: true,
        opengraphImage: 'https://op1.0ps.us/200-200-ffffff/opplanet-opticsplanet-com-logo.jpg',
        facetSidebar: {"max_items_allowed":10,"max_items_amount":8,"max_group_amount":10},
        outletDealFeature: false,
        shedDealFeature: false,
        forceFirebaseSupported: false,
        comparisonToolBasketHeaderFeature: false,
        personalizedCarousel: {"seconds_to_refresh_products":60,"max_products_count_for_carousel":33},
        ajaxDepartmentMenu: true,
        facetsCustomViewFeature: true,
        facetsViewTypeTemplates: {"checkbox":"checkbox_facet_view.html.twig","square":"square_facet_view.html.twig","square_color":"square_color_facet_view.html.twig"},
        facetsMoveToTopFeature: true,
        facetsCustomViewTypes: ["square","square_color"],
        facetsDefaultViewType: "checkbox",
        facetsCustomOrderPerCategoryFeature: false,
        googleReCaptcha: false,
        googleReCaptchaSiteKey: "6Ld1R08UAAAAAB2V9RnBXiyLfIaflv-S2-170dFg",
        sidebarFacetsPins: false,
        upsellEnabled: true,
        googleTagManager: "GTM-W7S8NNM",
        productBlockIconsReactFeature: true
    };

    
    
    
        op.config.facetedNavFeature = true;
    
        op.config.asyncFacetsFeature = true;
    
        op.config.passParamsToProductPage = true;
    
    
            op.config.isVariantPage = false;
    
    op.config.braintree = {
        enabled: true,
        acceptedCardTypes: ['visa', 'master', 'amex', 'jcb', 'discover'],
        fallbackErrors: {
            none: 0,
            notFunctioning: 1,
            setupFailed: 2,
            getNonceFailed: 3,
            jsNotFunctioning: 4,
            setupFailedTls: 5
        },
        vendorJsPath: 'vendor/braintree-web/dist/braintree.js'
    };
            op.config.braintree.functioning = false;
        op.config.braintree.clientToken = null;
                op.config.trackGaOnChatButtonClickDimensionIndex = '';
    

    if (typeof op === 'undefined') {
        var op = {};
    }
    if (typeof op.config === 'undefined') {
        op.config = {};
    }

    op.config.imagesDomain = 'op%d.0ps.us/';
    op.config.assetUrl = "https://opl.0ps.us/assets-2019-04-12a/".replace(/\/[^\/]+$/, '/');
    op.config.baseUrl = "https://www.opticsplanet.com/";
    op.config.baseUrlNoScheme = "//www.opticsplanet.com/";
    op.config.baseApiUrl = "https://www.opticsplanet.com/api/0.3/";
    op.config.free_express_shipping_coupon = "2DAYAIR";
    op.config.url_unsafe_char_regexp = "[^a-z0-9-_,.!']+";
    op.config.url_unsafe_char_regexp_whitespace = "[^a-z0-9-_,.!' ]+";
    op.config.assetVersion = "2019-04-12a";
    op.config.store_name_url = "OpticsPlanet.com";

    op.config.session = {
        name: 'OPCARTSID',
        cookieValueRegExp: "/^[a-zA-Z0-9,-]{22,40}$/"
    };

            window.webpackPublicPath = op.config.assetUrl + 'js/opticsplanet/';


                op.config.baseApiUrl = "https://www.opticsplanet.com/api/0.3/";
        op.config.loadTemplatesFromCache = true;
    

        var newFooterData = {
                        phone      : '+1-800-504-5897',
            intl       : '+1-847-513-6201',
            fax        : '+1-847-919-3003',
            hop1       : '9AM-7PM CST Mon-Fri',
            hop2       : '',
            hop3       : '',
            copyright  : '1999',
            isCheckout : false,
            hasGlobalJS: true
        };
    

var log = function(level, message, contextData) {var key,context = '',customContext = window.nelmio_js_logger_custom_context,e = encodeURIComponent;if (contextData) {for (key in contextData) {context += '&context[' + e(key) + ']=' + e(contextData[key]);}}if ('object' === typeof customContext) {for (key in customContext) {context += '&context[' + e(key) + ']=' + e(customContext[key]);}}(new Image()).src = 'https://www.opticsplanet.com/nelmio-js-logger/log?msg=' + e(message) + '&level=' + e(level) + context;};

(function() {
            if (typeof window === 'undefined') {
        return;
    }

        var basicModule = (function () {var basic = {};var oldErrorHandler = window.onerror;window.onerror = function(errorMsg, file, line, col, error) {if (oldErrorHandler) {oldErrorHandler(errorMsg, file, line, col, error);}if (typeof stackTraceJsModule !== 'undefined') {stackTraceJsModule.callStackTraceJs(errorMsg, file, line, col, error);return;}basic.callSimpleLogger(errorMsg, file, line, col, error);};basic.callSimpleLogger = function callSimpleLogger(errorMsg, file, line, col, error) {var e = encodeURIComponent;(new Image()).src = 'https://www.opticsplanet.com/nelmio-js-logger/log?msg=' + e(errorMsg) +'&level=error' +'&context[file]=' + e(file) +'&context[line]=' + e(line) +'&context[browser]=' + e(navigator.userAgent) +'&context[page]=' + e(document.location.href) + basic.fetchCustomContext();};basic.fetchCustomContext = function fetchCustomContext() {var key,e = encodeURIComponent,customContext = window.nelmio_js_logger_custom_context,customContextStr = '';if ('object' === typeof customContext) {for (key in customContext) {customContextStr += '&context[' + e(key) + ']=' + e(customContext[key]);}}     return customContextStr;};return basic;}());var stackTraceJsModule = (function (basicModule) {var stackTraceJs = {};stackTraceJs.isScriptPresent = function isScriptPresent() {return ((typeof StackTrace !== 'undefined') && (typeof StackTrace.fromError === 'function'));};stackTraceJs.sendLogData = function sendLogData(errorMsg, file, line, col, error) {StackTrace.fromError(error).then(function(stackframes) {var req = new XMLHttpRequest();req.onerror = function(err) {if (typeof console !== 'undefined' && typeof console.log === 'function') {console.log('An error occurred while trying to log an error using stacktrace.js!');}basicModule.callSimpleLogger(errorMsg, file, line, col, error);};req.onreadystatechange = function onreadystatechange() {if (req.readyState === 4) {if (req.status >= 200 && req.status < 400) {if (typeof console !== 'undefined' && typeof console.log === 'function') {console.log('Error logged successfully to https://www.opticsplanet.com/nelmio-js-logger/log.');}} else {if (typeof console !== 'undefined' && typeof console.log === 'function') {console.log('POST to https://www.opticsplanet.com/nelmio-js-logger/log failed with status: ' + req.status);}basicModule.callSimpleLogger(errorMsg, file, line, col, error);}}};req.open('post', 'https://www.opticsplanet.com/nelmio-js-logger/log');req.setRequestHeader('Content-Type', 'application/json');req.send(JSON.stringify({stack: stackframes, msg: errorMsg, level: 'error', context: {file: file, line: line, column: col, userAgent: navigator.userAgent, platform: navigator.platform,customContext: basicModule.fetchCustomContext()}}));}).catch(function(err) {if (typeof console !== 'undefined' && typeof console.log === 'function') {console.log('An error occurred while trying to log an error using stacktrace.js!');}basicModule.callSimpleLogger('An error occurred while trying to log an error using stacktrace.js!', err.fileName, err.lineNumber, err.columnNumber, err);basicModule.callSimpleLogger(errorMsg, file, line, col, error);});};stackTraceJs.callStackTraceJs = function callStackTraceJs(errorMsg, file, line, col, error) {if (stackTraceJs.isScriptPresent()) {stackTraceJs.sendLogData(errorMsg, file, line, col, error);return;}var script = document.createElement('script');script.src = 'https://cdnjs.cloudflare.com/ajax/libs/stacktrace.js/1.3.1/stacktrace.min.js';document.documentElement.appendChild(script);script.onload = function() {if (stackTraceJs.isScriptPresent()) {if (!this.executed) {this.executed = true;stackTraceJs.sendLogData(errorMsg, file, line, col, error);} } else {console.log(script);this.onerror();}};script.onerror = function() {console.log("StackTrace loading has failed, call default logger");basicModule.callSimpleLogger(errorMsg, file, line, col, error)};script.onreadystatechange = function() {var self = this;if (this.readyState == "complete" || this.readyState == "loaded") {setTimeout(function() {self.onload()}, 0);}};};return stackTraceJs;}(basicModule));

        var oldErrorHandler = window.onerror,
                context = window.nelmio_js_logger_custom_context = window.nelmio_js_logger_custom_context || {};

    function getCookie(name) {
        var names = op.COOKIE_NAMES, parts, cookiesAsString, cookieValue, cookiesList = {};
        cookiesAsString = String(document.cookie);
        cookiesAsString.split(';').forEach(function(cookieStr) {
            // remove spaces
            parts = cookieStr.replace(/\s+/, '').split('=');
            cookiesList[parts[0]] = parts[1];
        });

        cookieValue = (names[name] && cookiesList[names[name]] ? cookiesList[names[name]]: 'N/A');
        return cookieValue;
    }

    window.onerror = function (message, file, line, column, error) {
        // if adblocker is FALSE, then javascript was not blocked
        context.adblocker = window.adblocker;
        context.column = column;
        context.error = error + '';
        context.device = getCookie('X_UA_DEVICE_FORCE');
        context.abtest_name = getCookie('AB_TESTING');

        oldErrorHandler.apply(this, arguments);

        delete context.stack;
        delete context.column;
        delete context.error;
    };
})();


    (function(jQuery) {
        var oldParseJSON = jQuery.parseJSON;

        jQuery.parseJSON = function( json ) {
            if ( !json && json !== null ) {
                return null;
            }
            return oldParseJSON.apply( this, arguments );
        };
    })(jQuery);


        var app, order;

        order = typeof order === 'undefined' ? {} : order;

        app = new op.base.bootstrap();
    

    // The global variable will be removed in scope of PDM-8283
    var _currentProductModel = {};
    op.services = op.services || {};

    try {
        _currentProductModel = new op.base.models.CurrentProduct(
            {}
        );
        if (_currentProductModel.getSize() == 1) {
            _currentProductModel.getVariants().at(0).selectVariant();
        }
    } catch(e) {
        op.error(e);
    }

    op.services['op.models.CurrentProduct'] = {
        'source': _currentProductModel
    };
    op.services['op.services.GoogleAnalytics'] = {
        'source': new op.base.services.GoogleAnalytics(
            op.config.googleAnalytics,
            _currentProductModel
        )
    };

    app.addImmediateRunner(op.services['op.services.GoogleAnalytics'].source);

    if (typeof op.base.models.CustomFacetsOrder === 'function') {
        try {
            op.services['op.models.CustomFacetsOrder'] = {
                'source': new op.base.models.CustomFacetsOrder(
                        {}
                )
            };
        } catch(e) {
            op.error(e);
        }
    }

    if (typeof op.base.services.CampaignCode === 'function') {
        try {
            op.services['op.services.CampaignCode'] = {
                'source': new op.base.services.CampaignCode(
                    new op.base.services.Cookie,
                    new op.base.services.Request
                )
            };
            app.addImmediateRunner(op.services['op.services.CampaignCode'].source);
        } catch(e) {
            op.error(e);
        }
    }

    app.onRunnerImmediate();


    window.ecentria.featureManager = new window.ecentria.Feature({"features":[{"name":"FEATURE_CUSTOMER_API","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_REVIEWS","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_MY_ACCOUNT","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_SHARE_FACEBOOK","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_SHARE_TWITTER","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_SHARE_PINTEREST","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_SHARE_EMAIL","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_NEWSLETTER_SOLICITATION_POPUP","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_VARIANT_PAGES","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_TRACK_GA_ON_CHAT_BUTTON_CLICK","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_IS_MADE_IN_USA","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_PSEUDO_PERSONALIZED_CAROUSEL","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_WISHLIST","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_DEPARTMENTS","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_ADVANCED_DEPARTMENTS_NAVIGATION","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_MOBILE_DEALS_CAROUSEL","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_HOW_TO","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null},{"name":"FEATURE_WHY_BUY_FROM_US","values":["on","off","on","off"],"split":[50,50,50,50],"state":null,"enabled":true,"decisionStrategy":null,"decisionStrategyConfig":null,"availabilityPolicy":null,"availabilityPolicyConfig":null}],"cookieName":"ecentria_feature_20141010_opticsplanet","cookieLifetime":2592000});
    window.ecentria.featureManager.init();


                op.container = new op.di();
                op.container.init();
            

        op.container.config('op.services.Newsletter', {
            dontShowSolicitation: false
        });
                op.container.config('op.services.MobileSmartBanner', {
            title: 'Try Our New App!',
            author: 'Faster, easier, better - right on your mobile device!',
            inAppStore: 'On the App Store',
            inGooglePlay: 'On the Play Store',
            daysReminder: 30,
            daysHidden: 30,
            appendToSelector: 'body',
            pushSelector: 'body',
            layer: true,
            iOSUniversalApp: false
        });
                op.container.config('op.services.ProductReviews', {
            authoredTextData:                 []
                    });
    

        app.addBottomRunner(op.container.get('op.services.GoogleExperiments'));
        app.addBottomRunner(op.container.get('op.services.Router'));
        app.addBottomRunner(op.container.get('op.services.PageResize'));
        app.addBottomRunner(op.container.get('op.services.CustomerManager'));
        app.addOnReadyRunner(op.container.get('op.services.ApiHttpsTunnelClient'));
        app.addBottomRunner(op.container.get('op.services.DeviceDetection'));
        app.addBottomRunner(op.container.get('op.services.Global'));
        app.addBottomRunner(op.container.get('op.services.GlobalCommon'));
        app.addOnReadyRunner(op.container.get('op.services.BrowserDetect'));
        app.addOnReadyRunner(op.container.get('op.services.PopupResizeOnChange'));
        app.addOnReadyRunner(op.container.get('op.services.HistoryApi'));

                    app.addOnReadyRunner(op.container.get('op.services.GooglePlaceAutocomplete'));
        
                    app.addOnReadyRunner(op.container.get('op.services.FacebookJsApi'));
            app.addOnReadyRunner(op.container.get('op.services.LazyFacebookSdkLoader'));
        
                                    app.addOnReadyRunner(op.container.get('op.services.PersonalizedCarousel'));
                        app.addOnReadyRunner(op.container.get('op.services.RecentItems'));

        
                    app.addBottomRunner(op.container.get('op.services.CartAbandonment'));
        
        app.addOnReadyRunner(op.container.get('op.services.Newsletter'));

        app.addOnReadyRunner(op.container.get('op.services.LazyImages'));

        app.addOnReadyRunner(op.container.get('op.services.Banners'));

        
        
        
            

            app.addOnLoadRunner(op.container.get('op.services.LegacyMyAccountRunner'));
            app.addBottomRunner(op.container.get('op.services.MyAccount'));
        

        app.addOnReadyRunner(op.container.get('op.services.SearchRecentResults'));
    

        app.addOnReadyRunner(op.container.get('op.services.ShoppingCartQuantity'));
        app.addOnReadyRunner(op.container.get('op.services.SearchQueriesHandler'));
                    app.addOnReadyRunner(op.container.get('op.services.MobileSmartBanner'));
        
                    app.addOnReadyRunner(op.container.get('op.services.CompareStorage'));
                            app.addOnReadyRunner(op.container.get('op.services.YahooDpa'));
        
                    app.addOnReadyRunner(op.container.get('op.services.PushNotification'));
            

        app.init('opticsplanet');
        app.onRunnerBottom();

        $(function () {
            op.container.get('op.services.FacebookJsApi').setAuthenticated(false);
            op.container.get('op.services.FacebookJsApi').setFacebookAllowed(false);
            op.container.get('op.services.FacebookJsApi').setFacebookAutoLoginPath("https://www.opticsplanet.com/api/0.3/customer/facebook");

            app.onRunnerOnReady(function() {
                var areCookiesEnabled = op.container.get('op.services.Cookie').areCookiesEnabled();
                initStorePage();

                if (!areCookiesEnabled) {
                    $("#no-cookies").show();
                }
            });
        });
    

            var _old = window.onload;
            window.onload = function () {
                _old && _old.apply(this, arguments);
                app.onRunnerOnLoad();
            }
        
