
var Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date();
(function(){
var s1=document.createElement("script"),s0=document.getElementsByTagName("script")[0];
s1.async=true;
s1.src='https://embed.tawk.to/5c5daf866cb1ff3c14cbad86/default';
s1.charset='UTF-8';
s1.setAttribute('crossorigin','*');
s0.parentNode.insertBefore(s1,s0);
})();


        //<![CDATA[
        requirejs(['jquery'], function(jQuery) {
            jQuery(function($) {
                // If header is in mobile mode, remove "display: block". See #10.
                $(document).on('dropdowndialogcreate', function(event) {
                    if ($('#header-container').hasClass('header-mobile'))
                    {
                        $('#header-cart').css('display', '');
                    }
                });
                $(document).on('dropdowndialogbeforeclose', function(event) {
                    $('#header-cart').data('mage-dropdownDialog').opener = $(document.body); // See #5
                });
            });
        }); //end: requirejs
        //]]>
    

//<![CDATA[

requirejs(['jquery', 'ultramegamenu'], function(jQuery, ultramegamenu) {

    var topMenuContainer = jQuery('#mainmenu');
    var topMenuSettings = {
        mobileMenuThreshold: 992        , isVerticalLayout: false        , vertnavTriggerSelector: '#vertnav-trigger'
        , mode: 0                , initVerticalMenuCollapsed: true        , outermostContainer: jQuery('.hp-blocks-holder')        , fullWidthDdContainer: jQuery('.hp-blocks-holder')    };
    var theTopMenu = topMenuContainer.ultramegamenu(topMenuSettings).data("infortis-ultramegamenu");
    theTopMenu.enableDropdowns();

        
        jQuery(function($) {

            var itemsList = topMenuContainer.children('ul'); // itemsList.css('background-color', 'yellow'); ///

            // Non-clickable links
            itemsList.on('click', '.no-click', function(e) {
                e.preventDefault();
            });

        }); //end: on document ready

        jQuery(window).on("load", function() {

            var menubar = topMenuContainer;
            var isTouchDevice = ('ontouchstart' in window) || (navigator.msMaxTouchPoints > 0);
            if (isTouchDevice)
            {
                menubar.on('click', 'a', function(e) {

                    var link = jQuery(this);
                    if (!menubar.hasClass('nav-mobile') && link.parent().hasClass('nav-item--parent'))
                    {
                        if (!link.hasClass('ready'))
                        {
                            e.preventDefault();
                            menubar.find('.ready').removeClass('ready');
                            link.parents('li').children('a').addClass('ready');
                        }
                    }

                }); //end: on click
            } //end: if isTouchDevice

        }); //end: on load

    
}); //end: requirejs

//]]>


//<![CDATA[
requirejs(['jquery','owlcarousel'], function(jQuery, owlcarousel){ //

    jQuery(function($) {
        
        var owl = $('#slideshow-43028cdff5ac9afb0e1cf0fdbd54e6a3');
        owl.owlCarousel({

            navigationText: false
            , addClassActive: true

                    , singleItem: true

                            , transitionStyle: 'fade'
            
        
                    , slideSpeed: 200        
                    , paginationSpeed: 500        
                    , autoPlay: 10000        
                    , stopOnHover: true
        
                    , rewindNav: true
            , rewindSpeed: 600
        
                    , pagination: true
        
                    , navigation: true
        
        
            , beforeInit: function() {
                var firstSlide = owl.find('.item:eq(0)');
                firstSlide.find('[data-animate-in]').each(function() {
                    $(this).addClass($(this).data('animate-in') + ' animated');
                });
            }

                        , afterMove: function() {
                owl.find('.owl-item.active [data-animate-in]').each(function() {
                    $(this).addClass($(this).data('animate-in') + ' animated');
                });
            }

            , beforeMove: function() {
                owl.find('.owl-item.active [data-animate-in]').each(function() {
                    $(this).removeClass($(this).data('animate-in') + ' animated');
                });
            }

        
        }); // end: owl

    });

});
//]]>


//<![CDATA[

requirejs(['jquery', 'smartheader', 'stickyheader', 'dropdownDialog'], function(jQuery, smartheader, stickyheader, dropdownDialog) {

    var theHeaderContainer = jQuery('#header-container');

        
        //alert('header tpl, before smartheader');

        theHeaderContainer.smartheader();

    
    jQuery(function($) {

        //console.log('header tpl, on(ready), ater smartheader');
        //alert('header tpl, on(ready), ater smartheader');

        
            // Skip Links
            var skipContents = $('.skip-content');
            var skipLinks = $('.skip-link');

            skipLinks.on('click', function (event) {

                // In case skip link is "a" tag
                event.preventDefault();

                var self = $(this);
                var target = self.data('skiptarget');

                // Get target element
                var elem = $(target);

                // Check if stub is open
                var isSkipContentOpen = elem.hasClass('skip-active') ? 1 : 0;

                // Hide all stubs
                skipLinks.removeClass('skip-active');
                skipContents.removeClass('skip-active');

                // Toggle stubs
                if (isSkipContentOpen) {
                    self.removeClass('skip-active');
                } else {
                    self.addClass('skip-active');
                    elem.addClass('skip-active');
                }
            });

        
        
            var stickyHeaderSettings = {
                stickyThreshold: 992            };
            theHeaderContainer.stickyheader(stickyHeaderSettings);

        
    }); //end: on document ready

}); //end: requirejs

//]]>


//<![CDATA[

    //Expose the header container if jQuery script (smartheader) failed

    // var jsHeaderContainerObject = document.getElementById("header-container");
    // if (jsHeaderContainerObject.style.display == 'none')
    // {
    //     jsHeaderContainerObject.style.display = "block";
    //     jsHeaderContainerObject.classList.add("js-shown"); ///
    // }

//]]>


//<![CDATA[

    requirejs(['jquery','owlcarousel'], function(jQuery, owl)
    {
        jQuery(function($) {
            var owl = $('#itemslider-featured-ef0f2dfaa75b088ffd9c5e1d062b1db4');
            owl.owlCarousel({

                                    lazyLoad: true,
                 
                                    itemsCustom: [ [0, 1], [320, 2], [480, 3], [768, 4], [992, 5], [1200, 6] ],
                    responsiveRefreshRate: 50,
                 
                                    slideSpeed: 200,
                 
                                    paginationSpeed: 500,
                 
                                    scrollPerPage: true,
                 
                 
                                    stopOnHover: true,
                 
                                    rewindNav: true,
                    rewindSpeed: 600,
                 
                                    pagination: true,
                                    navigation: true,
                    navigationText: false

            });
        });
    });

//]]>


//<![CDATA[

    requirejs(['jquery','owlcarousel'], function(jQuery, owl)
    {
        jQuery(function($) {
            var owl = $('#itemslider-featured-5a68690a51aed1b359db1d3225ad8262');
            owl.owlCarousel({

                                    lazyLoad: true,
                 
                                    itemsCustom: [ [0, 1], [320, 2], [480, 3], [768, 2], [992, 2], [1200, 3] ],
                    responsiveRefreshRate: 50,
                 
                                    slideSpeed: 200,
                 
                                    paginationSpeed: 500,
                 
                                    scrollPerPage: true,
                 
                                    autoPlay: 4000,
                 
                                    stopOnHover: true,
                 
                                    rewindNav: true,
                    rewindSpeed: 600,
                 
                                    pagination: false,
                                    navigation: true,
                    navigationText: false

            });
        });
    });

//]]>


//<![CDATA[

    requirejs(['jquery','owlcarousel'], function(jQuery, owl)
    {
        jQuery(function($) {
            var owl = $('#itemslider-featured-789e2ae9dc78e3a825f14157879c3318');
            owl.owlCarousel({

                                    lazyLoad: true,
                 
                                    itemsCustom: [ [0, 1], [320, 2], [480, 3], [768, 2], [992, 2], [1200, 3] ],
                    responsiveRefreshRate: 50,
                 
                                    slideSpeed: 200,
                 
                                    paginationSpeed: 500,
                 
                                    scrollPerPage: true,
                 
                                    autoPlay: 4000,
                 
                                    stopOnHover: true,
                 
                                    rewindNav: true,
                    rewindSpeed: 600,
                 
                                    pagination: false,
                                    navigation: true,
                    navigationText: false

            });
        });
    });

//]]>


//<![CDATA[

    requirejs(['jquery','owlcarousel'], function(jQuery, owl)
    {
        jQuery(function($) {
            var owl = $('#itemslider-featured-4e54e970b11a883f945933eb46ac65aa');
            owl.owlCarousel({

                                    lazyLoad: true,
                 
                                    itemsCustom: [ [0, 1], [320, 2], [480, 3], [768, 4], [992, 5] ],
                    responsiveRefreshRate: 50,
                 
                                    slideSpeed: 200,
                 
                                    paginationSpeed: 500,
                 
                 
                 
                                    stopOnHover: true,
                 
                                    rewindNav: true,
                    rewindSpeed: 600,
                 
                                    pagination: true,
                                    navigation: true,
                    navigationText: false

            });
        });
    });

//]]>


    require(['jquery', 'owlcarousel'], function(){
        jQuery(function(jQuery) {

            var owl = jQuery('#itemslider-brands-14e710a453c882f841591f7a815fd610');
            owl.owlCarousel({

                            lazyLoad: true,
             
                            itemsCustom: [ [0, 1], [320, 2], [480, 2], [768, 3], [992, 4], [1200, 5] ],
                responsiveRefreshRate: 50,
             
                            slideSpeed: 200,
             
                            paginationSpeed: 500,
             
             
                            autoPlay: 6000,
             
                            stopOnHover: true,
             
                            rewindNav: true,
                rewindSpeed: 600,
             
                            pagination: false,
             

                navigation: true,
                navigationText: false

            });

        });
    });
//]]>


// add in cms template
var klevu_current_version = '2.2.5';
var allInputs = document.getElementsByTagName( 'input' );
    (function () {
        // Remove Magento event observers from the search box
        // Redirect to klevu js page
        for( i = 0, len = allInputs.length; i < len; i++ ){
            if( allInputs[i].type === "text" || allInputs[i].type === "search" ){
                if( allInputs[i].name === "q" ||  allInputs[i].id === "search" ){
                    var search_input = allInputs[i];
                    search_input.form.action='https://www.smoking-hookah.com/search/' ;//?q="+search_input.value;
                }
            }
        }
        
    })();

                var klevu_storeLandingPageUrl = 'https://www.smoking-hookah.com/search/'; 
        var klevu_showQuickSearchOnEnter=false;
        
    // call store js
    var klevu_apiKey = 'klevu-15379824848398619',
        searchTextBoxName = 'search',
        klevu_lang = 'en',
        klevu_result_top_margin = '',
        klevu_result_left_margin = '';
    (function () { var ws = document.createElement('script'),kl_protocol =("https:"===document.location.protocol?"https://":"http://"); ws.type = 'text/javascript'; ws.async = true; ws.src = kl_protocol+'js.klevu.com/klevu-js-v1/js/klevu-webstore.js'; var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ws, s); })();


	klevu_pubIsInUse = false ;
	if(!(typeof klevu_uc_productCustomizations === "function" && typeof klevu_uc_productCustomizations.nodeType !== "number")) {
		function klevu_uc_productCustomizations( product ){
			if(klevu_pubIsInUse){
				product.productImage = product.productImage.replace( 'pub/', '');
				product.productImage = product.productImage.replace( 'needtochange/', '');
			} else {
				product.productImage = product.productImage.replace( 'needtochange/', 'pub/');
			}
			return product;
		}
	}



    var klevu_cms_module_enabled=true;


// Enable cms for klevu template
        var klevu_cmsSearchEnabled = true;
          


        (function () {
            function riskifiedBeaconLoad() {
                jQuery.ajax(
                    "https://www.smoking-hookah.com/decider/response/session/", {
                        success : function(response) {
                            var session_id = response.session_id;

                            if(!session_id) {
                                return false;
                            }

                            var store_domain = "smoking-hookah.com";
                            var version = "1.0.0";

                            var url = ('https:' == document.location.protocol ? 'https://' : 'http://')
                                + "beacon.riskified.com?shop=" + store_domain
                                + "&sid=" + session_id
                                + "&v=" + version;

                            var s = document.createElement('script');
                            s.type = 'text/javascript';
                            s.async = true;
                            s.src = url;
                            var x = document.getElementsByTagName('script')[0];
                            x.parentNode.insertBefore(s, x);
                        }
                    }
                );
            }

            if(window.attachEvent) {
                window.attachEvent('onload', riskifiedBeaconLoad)
            } else{
                window.addEventListener('load', riskifiedBeaconLoad, false);
            }
        })();
    

//<![CDATA[

requirejs(['jquery'], function(jQuery) {

        
        var gridItemsEqualHeightApplied = false;
        function setGridItemsEqualHeight()
        {
            var bottomMinSpace = 20; // Minimum space below the button at the bottom of the item
            var gridItemMaxHeight = 0;
            var gridItemMaxPaddingBottom = 0;
            var $listContainer = jQuery('.category-products-grid');
            var $listItems = $listContainer.children('ol').children();
            var centered = $listContainer.hasClass('centered');
            var $row = jQuery();

            $listItems.each(function() {

                var $item = jQuery(this);
                var $actionsBlock = $item.find('.actions');

                // Check if first item in a row
                if ($item.css("clear") == "left")
                {
                    // If row not empty, apply the max values to all items in a row
                    if ($row.length)
                    {
                        $row.css({
                            "height": gridItemMaxHeight + "px", 
                            "padding-bottom": gridItemMaxPaddingBottom + "px"
                        });

                        // Reset the row collection and reset the max values
                        $row = jQuery();
                        gridItemMaxHeight = 0;
                        gridItemMaxPaddingBottom = 0;
                    }
                }
                $row = $row.add($item);

                $item.css("height", "auto");                 gridItemMaxHeight = Math.max(gridItemMaxHeight, $item.height());

                // Use constant bottomMinSpace as bottom offset for the actions container
                $actionsBlock.css("bottom", bottomMinSpace + "px");

                // Align button to the center
                if (centered)
                {
                    var objectWidth = $actionsBlock.width();
                    var availableWidth = $item.width();
                    var space = availableWidth - objectWidth;
                    var leftOffset = ~~(space / 2);
                    $actionsBlock.css("padding-left", leftOffset + "px");                 }

                // Set bottom padding wich equals to: actions container height + bottomMinSpace
                var currentPaddingBottom = bottomMinSpace + $actionsBlock.innerHeight();
                gridItemMaxPaddingBottom = Math.max(gridItemMaxPaddingBottom, currentPaddingBottom);

                $item.css("padding-bottom", currentPaddingBottom + "px"); // TODO: possibly redundant. Padding will be applied for the entire row.

            });

            // Apply the max values to all items in the last row
            if ($row.length)
            {
                $row.css({
                    "height": gridItemMaxHeight + "px", 
                    "padding-bottom": gridItemMaxPaddingBottom + "px"
                });
            }
            
            gridItemsEqualHeightApplied = true;

        }

    


    jQuery(function($) {



        // Products grid: equal height of items
        
            $(document).on('last-swatch-found', function(e) {
                setGridItemsEqualHeight();
                $(document).off('last-swatch-found');
                e.stopPropagation();
            });

            setGridItemsEqualHeight();
            
        


                        
                        $('.category-products-grid').on('mouseenter', '.item', function() {
                $(this).find(".display-onhover").fadeIn(400, "easeOutCubic");
            }).on('mouseleave', '.item', function() {
                $(this).find(".display-onhover").stop(true).hide();
            });
        
        


                $('.items-grid, .products-list').on('mouseenter', '.product-item-img', function() {
            $(this).find(".alt-img").fadeIn(400, "easeOutCubic");
        }).on('mouseleave', '.product-item-img', function() {
            $(this).find(".alt-img").stop(true).fadeOut(400, "easeOutCubic");
        });



                $('.fade-on-hover').on('mouseenter', function() {
            $(this).animate({opacity: 0.75}, 300, 'easeInOutCubic');
        }).on('mouseleave', function() {
            $(this).stop(true).animate({opacity: 1}, 300, 'easeInOutCubic');
        });



        // Drop-down
        var ddBlockSelector = '.dropdown-block-trigger'; // '.dropdown-block';
        var ddOpenTimeout;
        var dMenuPosTimeout;
        var DD_DELAY_IN = 200;
        var DD_DELAY_OUT = 0;
        var DD_ANIMATION_IN = 0;
        var DD_ANIMATION_OUT = 0;

        $(document).on('mouseenter touchstart', ddBlockSelector, function(e) {

            var dd = $(this);
            var ddHeading = dd.children('.dropdown-heading');
            var ddContent = dd.children('.dropdown-content');

            // If dd is not opened yet (or not initialized yet)
            var isDdOpened = dd.data('ddOpened');
            if (isDdOpened === false || isDdOpened === undefined)
            {
                // Clear old position of dd menu
                ddContent.css("left", "");
                ddContent.css("right", "");

                // Show dd menu
                clearTimeout(ddOpenTimeout);
                ddOpenTimeout = setTimeout(function() {
                    
                    dd.addClass('open');
                    dd.data('ddOpened', true);
                    
                }, DD_DELAY_IN);

                ddContent.stop(true, true).delay(DD_DELAY_IN).fadeIn(DD_ANIMATION_IN, "easeOutCubic");
                
                // Set new position of dd menu.
                // This code is delayed the same amount of time as dd animation.
                clearTimeout(dMenuPosTimeout);
                dMenuPosTimeout = setTimeout(function() {

                    if (ddContent.offset().left < 0)
                    {
                        var space = dd.offset().left; // Space available on the left of dd
                        ddContent.css("left", (-1)*space);
                        ddContent.css("right", "auto");
                    }
                
                }, DD_DELAY_IN);

            } // end: dd is not opened yet

        }).on('mouseleave', ddBlockSelector, function(e) {

            var dd = $(this);
            var ddContent = dd.children('.dropdown-content');

            clearTimeout(ddOpenTimeout); // Clear, to close dd on mouseleave
            ddContent.stop(true, true).delay(DD_DELAY_OUT).fadeOut(DD_ANIMATION_OUT, "easeInCubic");
            if (ddContent.is(":hidden"))
            {
                ddContent.hide();
            }
            dd.removeClass('open');

            // Clear dd open flag
            dd.data('ddOpened', false);

            // After hiding, clear the click event flag
            dd.data('ddClickIntercepted', false);

        }).on('click', ddBlockSelector, function(e) {

            var dd = $(this);
            var ddHeading = dd.children('.dropdown-heading');
            var ddContent = dd.children('.dropdown-content');

            // Only if the heading was clicked
            if ($.contains(ddHeading[0], e.target) || ddHeading.is(e.target))
            {
                // Only after the first click already happened, the second click can close the dropdown
                if (dd.data('ddClickIntercepted'))
                {
                    if (dd.hasClass('open'))
                    {
                        clearTimeout(ddOpenTimeout); // Clear, to close dd on mouseleave
                        ddContent.stop(true, true).delay(DD_DELAY_OUT).fadeOut(DD_ANIMATION_OUT, "easeInCubic");
                        if (ddContent.is(":hidden"))
                        {
                            ddContent.hide();
                        }
                        dd.removeClass('open');

                        // Clear dd open flag
                        dd.data('ddOpened', false);

                        // After hiding, clear the click event flag
                        dd.data('ddClickIntercepted', false);
                    }
                }
                else 
                {
                    // Set the click event flag
                    dd.data('ddClickIntercepted', true);
                }
            }

        });



        // Back to top
        var windowScroll_t;
        $(window).scroll(function(){
            
            clearTimeout(windowScroll_t);
            windowScroll_t = setTimeout(function() {
                                        
                if ($(this).scrollTop() > 100)
                {
                    $('#scroll-to-top').fadeIn();
                }
                else
                {
                    $('#scroll-to-top').fadeOut();
                }
            
            }, 500);
            
        });
        
        $('#scroll-to-top').click(function(){
            $("html, body").animate({scrollTop: 0}, 600, "easeOutCubic");
            return false;
        });



                var dResize = {

            winWidth : 0
            , winHeight : 0
            , windowResizeTimeout : null

            , init : function()
            {
                dResize.winWidth = $(window).width();
                dResize.winHeight = $(window).height();
                dResize.windowResizeTimeout;

                $(window).on('resize', function(e) {
                    clearTimeout(dResize.windowResizeTimeout);
                    dResize.windowResizeTimeout = setTimeout(function() {
                        dResize.onEventResize(e);
                    }, 50);
                });
            }

            , onEventResize : function(e)
            {
                //Prevent from executing the code in IE when the window wasn't actually resized
                var winNewWidth = $(window).width();
                var winNewHeight = $(window).height();

                //Code in this condition will be executed only if window was actually resized
                if (dResize.winWidth != winNewWidth || dResize.winHeight != winNewHeight)
                {
                    //Trigger deferred resize event
                    $(window).trigger("themeResize", e);

                    //Additional code executed on deferred resize
                    dResize.onEventDeferredResize();
                }

                //Update window size variables
                dResize.winWidth = winNewWidth;
                dResize.winHeight = winNewHeight;
            }

            , onEventDeferredResize : function() //Additional code, execute after window was actually resized
            {

                //Products grid: equal height of items
                
                    setGridItemsEqualHeight();

                
            }

        }; //end: dResize

        dResize.init();



    }); //end: on document ready



    jQuery(window).on('load',function() {

                
            setGridItemsEqualHeight();

        
    }); //end: on load



}); //end: requirejs



requirejs(['jquery', 'enquire'], function(jQuery, enquire) {

    jQuery(function($) {

        // Collapsible block
        // This plugin requires a specific markup structure. The plugin expects a set of elements that it
        // will use as the toggle link. It then hides all immediately following siblings and toggles the sibling's
        // visibility when the toggle link is clicked.
        //
        // Example markup:
        // <div class="block">
        //     <div class="block-title">Trigger</div>
        //     <div class="block-content">Content that should show when </div>
        // </div>
        //
        // JS: jQuery('.block-title').toggleSingle();
        //
        // Options:
        //     destruct: defaults to false, but if true, the plugin will remove itself, display content, and remove event handlers

        jQuery.fn.toggleSingle = function (options) {

            // passing destruct: true allows
            var settings = $.extend({
                destruct: false
            }, options);

            return this.each(function () {
                if (!settings.destruct) {
                    $(this).on('click', function () {
                        $(this)
                            .next()
                            .toggleClass('no-display')
                            .parent()
                            .toggleClass('active');
                            // .toggleClass('active')
                            // .next()
                            // .toggleClass('no-display');
                    });
                    // Hide the content
                    $this = $(this);
                    if (!$this.parent().hasClass('active'))
                    {
                        $this.next().addClass('no-display');
                    }
                }
                else
                {
                    // Remove event handler so that the toggle link can no longer be used
                    $(this).off('click');
                    // Remove all classes that were added by this plugin
                    $(this)
                        .next()
                        .removeClass('no-display')
                        .parent()
                        .removeClass('active');
                }

            });

        } // end: toggleSingle

        var breakpointScreenM = 768; // The same value as Magento's breakpoint @screen__m

        // Blocks collapsing on smaller viewports
        enquire.register('(max-width: ' + (breakpointScreenM - 1) + 'px)', {
            setup: function () {
                this.toggleElements = $(
                    '.sidebar .block:not(#layered-filter-block) .block-title, ' +
                    '.mobile-collapsible .block-title'
                );
            },
            match: function () {
                this.toggleElements.toggleSingle();
            },
            unmatch: function () {
                this.toggleElements.toggleSingle({destruct: true});
            }
        });

        // Blocks collapsing on all viewports.
        // For backward compatibility exclude blocks which have both classes: "collapsible" and "mobile-collapsible" 
        $('.collapsible:not(.mobile-collapsible) .block-title').toggleSingle();

    }); //end: on document ready

}); //end: requirejs



//]]>

