
var _sf_startpt=(new Date()).getTime();

/*! loadCSS. [c]2017 Filament Group, Inc. MIT License */
(function(w){
	"use strict";
	/* exported loadCSS */
	var loadCSS = function( href, before, media , callback, isFont){
		// Arguments explained:
		// `href` [REQUIRED] is the URL for your CSS file.
		// `before` [OPTIONAL] is the element the script should use as a reference for injecting our stylesheet <link> before
		// By default, loadCSS attempts to inject the link after the last stylesheet or script in the DOM. However, you might desire a more specific location in your document.
		// `media` [OPTIONAL] is the media type or query of the stylesheet. By default it will be 'all'
		var doc = w.document;
		var ss = doc.createElement( "link" );
		var ref;
		if( before ){
			ref = before;
		}
		else {
			var refs = ( doc.body || doc.getElementsByTagName( "head" )[ 0 ] ).childNodes;
			ref = refs[ refs.length - 1];
		}

		var sheets = doc.styleSheets;
		ss.rel = "stylesheet";
		ss.href = href;
		ss.onload = callback;
		// temporarily set media to something inapplicable to ensure it'll fetch without blocking render
		ss.media = "only x";

		// wait until body is defined before injecting link. This ensures a non-blocking load in IE11.
		function ready( cb ){
			if( doc.body ){
				return cb();
			}
			setTimeout(function(){
				ready( cb );
			});
		}
		// Inject link
			// Note: the ternary preserves the existing behavior of "before" argument, but we could choose to change the argument to "after" in a later release and standardize on ref.nextSibling for all refs
			// Note: `insertBefore` is used instead of `appendChild`, for safety re: http://www.paulirish.com/2011/surefire-dom-element-insertion/
		ready( function(){
			ref.parentNode.insertBefore( ss, ( before ? ref : ref.nextSibling ) );
		});
		// A method (exposed on return object for external use) that mimics onload by polling document.styleSheets until it includes the new sheet.
		var onloadcssdefined = function( cb ){
			var resolvedHref = ss.href;
			var i = sheets.length;
			while( i-- ){
				if( sheets[ i ].href === resolvedHref ){
					return cb();
				}
			}
			setTimeout(function() {
				onloadcssdefined( cb );
			});
		};

		function loadCB(){
			if( ss.addEventListener ){
				ss.removeEventListener( "load", loadCB );
			}
			ss.media = media || "all";
		}

		// once loaded, set link's media back to `all` so that the stylesheet applies once it loads
		if( ss.addEventListener ){
			ss.addEventListener( "load", loadCB);
		}
		ss.onloadcssdefined = onloadcssdefined;
		onloadcssdefined( loadCB );
		return ss;
	};
	// commonjs
	if( typeof exports !== "undefined" ){
		exports.loadCSS = loadCSS;
	}
	else {
		w.loadCSS = loadCSS;
	}
}( typeof global !== "undefined" ? global : this ));



				(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
				(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();if(!i.delayJs){a=s.createElement(o),
				m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)}else{delayJs.push([g,null,1,{noDelay:1}])}
				})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
				if((typeof(document.webkitHidden) == "undefined") || (!document.webkitHidden))  {
					ga('create', 'UA-40636549-4', 'photoaffections.com');
					ga('require', 'displayfeatures');
					ga('send', 'pageview');
				}

				function trackEvent(category, action, label, value) {
					ga('send', 'event', category, action, label, value);
				}
			

            //alert("br_trk");
            if(typeof DevConsole != "undefined") DevConsole.log("");
            var br_data = {};
            br_data.acct_id="5315";
            br_data.ptype ="homepage";
            br_data.cat_id = "";
            br_data.cat = "";
            br_data.prod_id = "";
            br_data.prod_name = "";
            br_data.sku = "";
            br_data.search_term = "";
            br_data.is_conversion = "";
            br_data.basket_value = "";
            br_data.order_id = "";
            br_data.basket ={};
            br_data.user_id="";
            
            delayJs.push("//cdns.brsrvr.com/v1/br-trk-5315.js");
            

		setTimeout(function(){var a=document.createElement("script");
		var b=document.getElementsByTagName("script")[0];
		a.src=document.location.protocol+"//script.crazyegg.com/pages/scripts/0039/3045.js?"+Math.floor(new Date().getTime()/3600000);
		a.async=true;a.type="text/javascript";b.parentNode.insertBefore(a,b)}, 1);
	

	    var gts = gts || [];

	    gts.push(["id", "479424"]);
	    gts.push(["badge_position", "USER_DEFINED"]);
	    gts.push(["badge_container", "GTS_CONTAINER"]);
	    gts.push(["locale", "en_US"]);
	    	    gts.push(["google_base_offer_id", "479266"]);
	    gts.push(["google_base_subaccount_id", "479424"]);
	    	    gts.push(["google_base_country", "US"]);
	    gts.push(["google_base_language", "EN"]);

	    $(document).ready(function() {
	        	        loadGoogleTrustedStore();
	        	    });

	

	   var _sf_async_config={};
	   _sf_async_config.uid = 14118;
	   _sf_async_config.domain = 'photoaffections.com';
	   _sf_async_config.useCanonical = true;
	   (function(){
	     function loadChartbeat() {
	       window._sf_endpt=(new Date()).getTime();
	       var e = document.createElement('script');
	       e.setAttribute('language', 'javascript');
	       e.setAttribute('type', 'text/javascript');
	       e.setAttribute('src', '//static.chartbeat.com/js/chartbeat.js');
	       document.body.appendChild(e);
	     }
	     var oldonload = window.onload;
	     window.onload = (typeof window.onload != 'function') ?
	        loadChartbeat : function() { oldonload(); loadChartbeat(); };
	   })();
	


    var rushDialogsInitialized = false;

    var initializeRushDialogs = function(){
        if (rushDialogsInitialized) {
            return ;
        }

        rushDialogsInitialized = true;

        $('#rushShippingWin').dialog({
            autoOpen: false,
            modal : true,
            resizable : false,
            stack : true,
            width: 780,
            height: 'auto',
            zIndex: 12000,
            title : 'Expedited Printing Services',
            create: function(){
                //$(this).css('maxWidth', 700);
                $(this).css('overflow', 'auto');
            },
            open: function() {
                jQuery('.ui-widget-overlay').bind('click', function() {
                    jQuery('#rushShippingWin').dialog('close');
                })
            }
        });

        $('#rushShippingWinInfo').dialog({
            autoOpen: false,
            modal : true,
            resizable : false,
            stack : true,
            width: 'auto',
            height: 'auto',
            zIndex: 12000,
            title : 'Expedited Printing Services',
            create: function(){
                //$(this).css('maxWidth', 700);
                $(this).css('overflow', 'auto');
            },
            open: function() {
                jQuery('.ui-widget-overlay').bind('click', function() {
                    jQuery('#rushShippingWinInfo').dialog('close');
                })
            }
        });
    };

	$(document).ready( function() {

		$(document.body).on('click', '.lightning, .small_lightning, .rushShippingLink', function(e) {
		    initializeRushDialogs();

			DevConsole.log('.lightning, .small_lightning, .rushShippingLink');
			if($('body').hasClass('responsive')){
			    $(this).trigger('touchend');
			    return false;
			}
			if($(this).hasClass('notdefault')){
				$("#rushShippingWin").dialog("option","width",920);
				$("#rushShippingWin").dialog("option","height","auto");
				$("#rushShippingWin").dialog("option","dialogClass", 'popup-newdesign');
				$("#rushShippingWin").dialog("option", "buttons",
				  [
				    {
				      text: "OK",
				      click: function() {
				        $( this ).dialog( "close" );
				      }

				      // Uncommenting the following line would hide the text,
				      // resulting in the label being used as a tooltip
				      //showText: false
				    }
				  ]
				);
			}

			if($(this).hasClass('rushShippingLink') && SITE_ID == SITE_STIUK) {
				window.location.href="/delivery";
			} else {
				$.post('/parts/rush_shipping_disclaimers.php', {}, function(data){
					$("#rushShippingWin").html(data);
					$("#rushShippingWin").dialog("open");
				});
			}
			e.preventDefault();
		});

	});

	function lightning(e){
	    initializeRushDialogs();
		e.preventDefault();
		$("#rushShippingWinInfo").dialog("open");
	}

	function rushDetails(){
        initializeRushDialogs();
		$("#rushShippingWinInfo").dialog("close");
		$("#rushShippingWin").dialog("open");
	}


                adroll_adv_id = 'QZW6LYLHYVBLZOZUZ7BNIP';
                adroll_pix_id = 'GKF2XSYSEZGNXGZGCL2EHK';
                delayJs.push('https://s.adroll.com/j/roundtrip.js');
            

	$(document).ready(function() {
	    if(slideCount > 1) {
			
            var mainSwiper = $('.home-slider').swiper({
                effect: 'fade',
                loop: true,
                autoplay: 6000,
                speed: 600,
                calculateHeight: true,
                pagination:'.pagination-main',
                paginationClickable: true,
                autoplayDisableOnInteraction: true,
                fade: {
                    crossFade: true
                }
            });

            $('.pagination-main .swiper-pagination-switch').click(function (){
                mainSwiper.stopAutoplay();
                mainSwiper.params.autoplay = 6000;
                mainSwiper.startAutoplay();
            });
	    }

		// Listen for orientation changes
		if (window.addEventListener) {
			window.addEventListener('orientationchange', function() {
				setTimeout(function(){
					mainSwiper.reInit();
				}, 100);
		  }, false);
		} else {
			window.attachEvent('orientationchange', function() {
				setTimeout(function(){
					mainSwiper.reInit();
				}, 100);
			});
		}

		// Pinterest
		window.PinIt = window.PinIt || { loaded:false };
		if (window.PinIt.loaded) return;
		window.PinIt.loaded = true;
		function async_load(){
			var s = document.createElement("script");
			s.type = "text/javascript";
			s.async = true;
			if (window.location.protocol == "https:")
				s.src = "https://assets.pinterest.com/js/pinit.js";
			else
				s.src = "http://assets.pinterest.com/js/pinit.js";
			var x = document.getElementsByTagName("script")[0];
			x.parentNode.insertBefore(s, x);
		}
		if (window.attachEvent)
			window.attachEvent("onload", async_load);
		else
			window.addEventListener("load", async_load, false);
	});

	function track_slider_click(sliderNum) {
		trackEvent('Home Page Slider', 'Click', sliderNum);
	}
	


    // delayJs.push('https://www.google.com/recaptcha/api.js');

  var validCaptchaCallBack = function(){};
  var errorCaptchaCallBack = function(){};

  var recaptchaDialogInitialized = false;
  var initializeRecaptchaDialogBox = function(){
      if (recaptchaDialogInitialized) {
          return ;
      }
      recaptchaDialogInitialized = true;
      $("#recaptchaDialogBox").dialog({
          title : "Verify",
          autoOpen : false,
          modal : true,
          show : "blind",
          hide : "blind",
          width :350,
      });
  };

  function validateCaptcha(){
    if(grecaptcha.getResponse()){
      var googleAPI = "/ajax/ajax_validate_captcha.php?response="+grecaptcha.getResponse();
      $.getJSON(googleAPI, function (response) {
        if( response.success === true){
          validCaptchaCallBack();
        } else {
          errorCaptchaCallBack();
        }
      });
    }
  }

  function openGoogleCaptchaDialog(v_callback,e_callback){
    validCaptchaCallBack = v_callback;
    errorCaptchaCallBack = e_callback;
    delayJs.push(['https://www.google.com/recaptcha/api.js', null, 1]);
    initializeRecaptchaDialogBox();
    $("#recaptchaDialogBox").dialog("open");
  }

  function isCaptchaDialogDisplayed(){
    initializeRecaptchaDialogBox();
    return $('#recaptchaDialogBox').dialog('isOpen');
  }

